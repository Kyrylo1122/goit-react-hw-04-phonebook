{"version":3,"file":"static/js/106.8d0021c6.chunk.js","mappings":"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","sources":["components/ContactForm/ValidateForm.js","components/ContactForm/Contactform.styled.js","components/const/Scheme.js","components/ContactForm/Contactform.jsx","components/ExitBtn/ExitBtn.styled.js","components/ExitBtn/ExitBtn.js","components/Modal/Modal.styled.js","components/Modal/Modal.js"],"sourcesContent":["export const validateName = value =>\n  !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(value)\n    ? \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    : '';\nexport const validateTel = value =>\n  !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n    value\n  )\n    ? 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    : '';\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  padding: ${p => p.theme.space[4]}px;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 70%;\n  @media screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\nexport const FormikField = styled(Field)`\n  padding: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\nexport const ErrorText = styled.p`\n  margin-bottom: ${p => p.theme.space[3]}px;\n\n  color: red;\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-style: italic;\n`;\nexport const ButtonSubmit = styled.button`\n  width: 50%;\n`;\n","import * as yup from 'yup';\n\nexport const scheme = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n  id: yup.string(),\n});\n","import { nanoid } from 'nanoid';\nimport { validateName, validateTel } from './ValidateForm';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  FormikForm,\n  ErrorText,\n  ButtonSubmit,\n  FormikField,\n} from './Contactform.styled';\nimport { scheme } from 'components/const/Scheme';\nconst initialValue = {\n  name: '',\n  number: '',\n  id: '',\n};\nexport default function ContactForm({ onSubmitForm }) {\n  const nameId = nanoid();\n  const telId = nanoid();\n\n  const handleSubmit = (value, { resetForm }) => {\n    const id = nanoid();\n    value.id = id;\n    onSubmitForm(value);\n    resetForm();\n  };\n\n  const FormError = ({ name }) => (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={initialValue}\n      validationSchema={scheme}\n    >\n      <FormikForm>\n        <label htmlFor={nameId}>Name :</label>\n        <FormikField\n          type=\"text\"\n          validate={validateName}\n          name=\"name\"\n          id={nameId}\n          required\n        />\n        <FormError name=\"name\" />\n        <label htmlFor={telId}>Phone number :</label>\n        <FormikField\n          type=\"tel\"\n          validate={validateTel}\n          name=\"number\"\n          id={telId}\n          required\n        />\n        <FormError name=\"number\" />\n\n        <ButtonSubmit className=\"btn\" type=\"submit\">\n          Add contact\n        </ButtonSubmit>\n      </FormikForm>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Exit = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  background-color: transparent;\n  color: black;\n  border: none;\n  transition: transform 200ms linear;\n  border-radius: 50%;\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    background-color: transparent;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { ImCross } from 'react-icons/im';\nimport { Exit } from './ExitBtn.styled';\n\nexport default function ExitBtn({ onClose }) {\n  return (\n    <Exit type=\"button\" onClick={onClose}>\n      <ImCross color=\"inherit\" size=\"1.2rem\" />\n    </Exit>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: ${p => p.theme.colors.backdrop};\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 3;\n`;\nexport const ModalContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n  width: 50%;\n  height: 50%;\n  background-color: white;\n\n  border-radius: 5px;\n`;\n\nexport const ExitBtnContainer = styled.div`\n  position: absolute;\n  top: 5%;\n  right: 5%;\n`;\n","import ContactForm from 'components/ContactForm/Contactform';\nimport ExitBtn from 'components/ExitBtn/ExitBtn';\nimport { useEffect } from 'react';\nimport { Backdrop, ExitBtnContainer, ModalContainer } from './Modal.styled';\n\nexport default function Modal({ onSubmitForm, closeModal }) {\n  useEffect(() => {\n    const Escape = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', Escape);\n    return () => window.removeEventListener('keydown', Escape);\n  }, [closeModal]);\n  const handleClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  return (\n    <Backdrop onClick={handleClick}>\n      <ModalContainer>\n        <ExitBtnContainer>\n          <ExitBtn onClose={closeModal} />\n        </ExitBtnContainer>\n        <ContactForm onSubmitForm={onSubmitForm} closeModal={closeModal} />\n      </ModalContainer>\n    </Backdrop>\n  );\n}\n"],"names":["validateName","value","test","validateTel","FormikForm","styled","Form","p","theme","space","FormikField","Field","ErrorText","fontSizes","xs","ButtonSubmit","scheme","yup","shape","name","required","number","id","initialValue","ContactForm","onSubmitForm","nameId","nanoid","telId","FormError","render","message","onSubmit","resetForm","initialValues","validationSchema","htmlFor","type","validate","className","Exit","colors","primary","ExitBtn","onClose","onClick","color","size","Backdrop","backdrop","ModalContainer","ExitBtnContainer","Modal","closeModal","useEffect","Escape","e","code","window","addEventListener","removeEventListener","currentTarget","target"],"sourceRoot":""}